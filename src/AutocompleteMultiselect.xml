<?xml version="1.0" encoding="utf-8"?>
<widget id="itvisors.autocompletemultiselect.AutocompleteMultiselect" pluginWidget="true" needsEntityContext="true" offlineCapable="true"
        supportedPlatform="Web"
        xmlns="http://www.mendix.com/widget/1.0/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd">
    <name>Autocomplete Multiselect</name>
    <description>Auto complete widget where multiple options can be selected. Based on https://material-ui.com/components/autocomplete/</description>
    <icon/>
    <properties>
        <propertyGroup caption="General">
            <systemProperty key="Label" />
            <systemProperty key="Visibility"/>
            <property key="editable" type="expression" required="false">
                <caption>Editable</caption>
                <description>Whether or not the widget is ediable. If left empty, the widget will be editable.</description>
                <returnType type="Boolean" />
            </property>
            <property key="dataSourceOptions" type="datasource" isList="true" required="true">
                <caption>Data source</caption>
                <description />
            </property>
            <property key="titleAttr" type="attribute" dataSource="dataSourceOptions" required="true">
                <caption>Title</caption>
                <description>String attribute where the title is stored to be shown in the dropdown</description>
                <attributeTypes>
                    <attributeType name="String"/>
                </attributeTypes>
            </property>
            <property key="defaultSelectedAttr" type="attribute" dataSource="dataSourceOptions" required="false">
                <caption>Default selected</caption>
                <description>Boolean attribute where is stored whether this option should be selected by default when loading the widget for the first time</description>
                <attributeTypes>
                    <attributeType name="Boolean"/>
                </attributeTypes>
            </property>
            <property key="multiple" type="boolean" required="true" defaultValue="true">
                <caption>Multi-select</caption>
                <description>If set to true, multiple options can be selected. Otherwise, the widget can be used as single-select</description>
            </property>
        </propertyGroup>

        <propertyGroup caption="Events">
            <property key="onChangeAction" type="action" required="false">
                <caption>On Change Action</caption>
                <description>Action to trigger when an option is selected or deselected. 
                Since this action is triggered for every change and this can happen quite fast if "No close on select" is set to true, it is wise to keep this action very short. If this combination is used, the response can best be mapped and used when e.g. saving the page or when the results are used.</description>
            </property>
            <property key="responseAttribute" type="attribute" required="true">
                <caption>Response</caption>
                <description>Attribute where the selected items are stored in json format ([{"title":"example1"}]). User needs write access on this attribute.</description>
                <attributeTypes>
                    <attributeType name="String"/>
                </attributeTypes>
            </property>
            <property key="refreshAttribute" type="attribute" required="false">
                <caption>Refresh</caption>
                <description>Set to true to refresh the widget back to the default values, widget will set the value back to false. Make sure the user has got access rights.</description>
                <attributeTypes>
                    <attributeType name="Boolean"/>
                </attributeTypes>
            </property>
        </propertyGroup>

        <propertyGroup caption="Behavior">
            <property key="disableCloseOnSelect" type="boolean" required="true" defaultValue="false">
                <caption>No close on select</caption>
                <description>Whether or not to close the list when an item is selected. Set to true to not close the list when an item is selected.</description>
            </property>
            <property key="filterSelectedOptions" type="boolean" required="true" defaultValue="false">
                <caption>Filter selected options</caption>
                <description>Whether or not to filter the options out of the list that are already selected.</description>
            </property>
            <property key="limitTags" type="integer" required="true" defaultValue="0">
                <caption>Limit Tags</caption>
                <description>Maximum number of selected tags to show if the dropdown is closed. If more options are selected, there will be an indication how many options are selected (e.g. +2) If set to 0, there is no limit.</description>
            </property>
        </propertyGroup>

        <propertyGroup caption="Layout">
            <property key="noOptionsText" type="textTemplate" required="false">
                <caption>No Options</caption>
                <description>Text to show when no options found</description> 
            </property>
            <property key="placeholder" type="textTemplate" required="false">
                <caption>Placeholder</caption>
                <description>Default value to show as placeholder</description> 
            </property>
            <property key="label" type="textTemplate" required="false">
                <caption>Label</caption>
                <description>Other way to display the label, within the widget</description> 
            </property>
            <property key="variant" type="enumeration" required="true" defaultValue="standard">
                <caption>Variant</caption>
                <description>How the text field will be styled</description>
                <enumerationValues>
                    <enumerationValue key="standard">standard</enumerationValue>
                    <enumerationValue key="outlined">outlined</enumerationValue>
                </enumerationValues>
            </property>
            <property key="showCheckboxes" type="boolean" required="true" defaultValue="false">
                <caption>Checkboxes</caption>
                <description>Whether or not to show checkboxes in front of the options.</description>
            </property>
        </propertyGroup>
    </properties>
</widget>